# docker-compose.yml
version: "3"
volumes:
  database_data:
    external: true
  redis_data:
    external: true

services:
  app:
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
    links:
      - postgres
      - redis
    volumes:
      - /usr/app/node_modules
      - ../../:/usr/app
    env_file:
      - ../../.env
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgres://wqopvhiv:j_rXyLzWCFjHV_IsUbgfU6ReWjdXu1Sl@salt.db.elephantsql.com:5432/wqopvhiv
      REDIS_URL: redis://swapi_redis
      NODE_ENV: development
      PORT: 3000
    command: >
      ash -c "npm run migrations-up && npm run serve"
    ports:
      - "8000:3000"
    command: npm run serve
    entrypoint:
      - /usr/app/docker/dev/entrypoint.sh

  postgres:
    container_name: postgres
    image: postgres:11.5
    expose:
      - '5432'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: wqopvhiv
      POSTGRES_PASSWORD: j_rXyLzWCFjHV_IsUbgfU6ReWjdXu1Sl
      POSTGRES_DB: wqopvhiv
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U wqopvhiv']
      interval: 5s
      timeout: 10s
      retries: 5

  redis:
    container_name: swapi_redis
    image: redis:latest
    command: ["redis-server", "--bind", "redis", "--port", "6379"]
    expose:
      - 6379
